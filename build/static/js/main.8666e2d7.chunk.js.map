{"version":3,"sources":["components/Blog.js","components/Notification.js","components/AddBlogForm.js","components/Togglable.js","components/LoginForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","addLike","removeBlog","user","useState","toggleButton","setToggleButton","handleOnClick","handleLikeClick","a","likes","deleteBlog","window","confirm","title","author","id","className","onClick","url","name","username","Notification","notification","type","message","AddBlogFrom","createBlog","setTitle","setAuthor","setUrl","addBlog","event","preventDefault","onSubmit","value","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","password","token","getAll","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","login","credentials","App","blogs","setBlogs","setUsername","setPassword","setUser","setNotification","addBlogFormRef","useRef","useEffect","blogService","then","loggedUserJSON","localStorage","getItem","JSON","parse","notifyWith","setTimeout","loginService","setItem","stringify","handleLogout","removeItem","blogObject","current","console","log","concat","map","filter","AddBlogForm","sort","b","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8666e2d7.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, addLike, removeBlog, user }) => {\n  const [toggleButton, setToggleButton] = useState('view')\n\n  const handleOnClick = () => {\n    toggleButton === 'view' ? setToggleButton('hide') : setToggleButton('view')\n  }\n\n  const handleLikeClick = async () => {\n    addLike({ ...blog, likes: blog.likes + 1 })\n  }\n\n  const deleteBlog = async () => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)){\n      removeBlog(blog.id)\n    }\n  }\n\n  if (toggleButton === 'hide') {\n    return (\n      <div className='list'>\n        {blog.title} {blog.author} <button id='view-button' onClick={handleOnClick}>{toggleButton}</button><br />\n        {blog.url}<br />\n        {blog.user.name}<br />\n        likes {blog.likes} <button id='like-button' onClick={handleLikeClick}>like</button><br />\n        {blog.user.username === user.username ? <button onClick={deleteBlog}>Remove</button> : null}\n      </div>\n    )\n  }\n  return (\n    <div className='list'>\n      {blog.title} {blog.author} <button id='view-button' onClick={handleOnClick}>{toggleButton}</button>\n    </div>\n  )\n}\n\nexport default Blog\n","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\n\nconst AddBlogFrom = ({ createBlog }) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    createBlog({\n      title: title,\n      author: author,\n      url: url\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n          title:\n          <input\n            id='title'\n            type='text'\n            value={title}\n            name='Title'\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author:\n          <input\n            id='author'\n            type='text'\n            value={author}\n            name='Author'\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url:\n          <input\n            id='url'\n            type='text'\n            value={url}\n            name='Url'\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button id='create-button' type='submit'>create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddBlogFrom","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleLogin,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <form onSubmit={handleLogin}>\n        <div>\n                    username\n          <input\n            id='username'\n            type='text'\n            value={username}\n            name='Username'\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n                    password\n          <input\n            id='password'\n            type='password'\n            value={password}\n            name='Password'\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id='login-button' type='submit'>login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport AddBlogForm from './components/AddBlogForm'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n\n  const addBlogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloggappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const notifyWith = (message, type) => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBloggappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      notifyWith('wrong username or password', 'error')\n    }\n  }\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedBloggappUser')\n    setUser(null)\n  }\n\n  const addBlog = async (blogObject) => {\n    addBlogFormRef.current.toggleVisibility()\n    const response = await blogService.create(blogObject)\n    console.log(response)\n    setBlogs(blogs.concat(response))\n    notifyWith(`a new blog ${response.title} by ${response.author} added`, 'success')\n  }\n\n  const addLike = async (blogObject) => {\n    const response = await blogService.update(blogObject.id, blogObject)\n    setBlogs(blogs.map(blog => blog.id === response.id ? response : blog))\n  }\n\n  const deleteBlog = async (id) => {\n    await blogService.remove(id)\n    setBlogs(blogs.filter(blog => blog.id !== id))\n    notifyWith('Blog removed', 'success')\n  }\n\n  const addBlogForm = () => (\n    <Togglable buttonLabel='new blog' ref={addBlogFormRef}>\n      <AddBlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log in to application</h2>\n\n        <Notification notification={notification} />\n        <LoginForm\n          handleLogin={handleLogin}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          username={username}\n          password={password}\n        />\n\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification notification={notification} />\n\n      <p>\n        {user.name} logged in\n        <button onClick={handleLogout}>logout</button>\n      </p>\n\n      {addBlogForm()}\n\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\n        <Blog\n          key={blog.id}\n          blog={blog}\n          addLike={addLike}\n          removeBlog={deleteBlog}\n          user={user}\n        />\n      )}\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}